{"version":3,"sources":["pages/home.jsx","components/progress.jsx","pages/loading.jsx","pages/login.jsx","pages/classRoom.jsx","pages/pharmacy.jsx","pages/ranking.jsx","pages/success.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","Link","to","Component","Progress","percent","this","props","progress","style","width","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","loading","setInterval","setState","clearInterval","window","location","hash","components_progress","submit","htmlFor","id","type","placeholder","onClick","ClassRoom","toStudy","back","history","goBack","switchCourse","e","target","courseList","course","isTick","continueTimer","timeCount","timer","onHideMax","isMax","onShowMax","onclassOver","push","pathname","score","beginStudy","slice","marginBottom","key","src","alt","map","item","index","innerHeight","height","innerWidth","Pharmacy","pageType","onInquiry","onCheck","onChecked","checked","onSubmit","A","onFinish","bgTypes","bgTypes2","pharmacer","pharmacerM","doctor","userType","pharmacyType","_this$state","bg","buttonA","buttonB","B","buttonC","C","buttonD","D","Ranking","isIntro","isMyLevel","onIntro","onMyLevel","background","doctorType1","doctorType2","levelType","rankingType","color","textAlign","Success","successTypes","doctorTypes","PureComponent","App","react","HashRouter","Switch","Route","exact","path","component","Loading","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b2c9c1d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './home.scss';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home\">\r\n                <i className=\"title-icon title-icon-lg\"></i>\r\n                <Link to=\"classroom\">\r\n                    <button className=\"button-1 button-lg\">药方学堂</button>\r\n                </Link>\r\n                <Link to=\"pharmacy\">\r\n                    <button className=\"button-1 button-lg\">悬壶济世</button>\r\n                </Link>\r\n                <Link to=\"ranking\">\r\n                    <button className=\"button-1 button-lg\">等级排行</button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './progress.scss';\r\n\r\nclass Progress extends Component {\r\n\r\n    static propTypes = {\r\n        progress: PropTypes.number\r\n    }\r\n\r\n    render() {\r\n        const percent = this.props.progress + '%';\r\n        return (\r\n            <div className=\"Progress\">\r\n                <div className=\"Progress-content\" style={{ width: percent }}></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Progress;\r\n","import React, { Component } from 'react';\r\nimport Progress from '../components/progress';\r\nimport 'animate.css';\r\nimport './loading.scss';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            progress: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const loading = setInterval(() => {\r\n            const progress = this.state.progress + 20;\r\n            this.setState({ progress });\r\n            if (progress === 120) {\r\n                clearInterval(loading);\r\n                window.location.hash = \"home\";\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Loading\">\r\n                <i className=\"title-icon title-icon-lg\"></i>\r\n                <span className=\"Loading-title animated infinite jello\">\r\n                    Loding...\r\n                </span>\r\n                <Progress progress={this.state.progress}></Progress>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport './login.scss';\r\n\r\nclass Login extends Component {\r\n\r\n    submit = () => {\r\n        window.location.hash = \"loading\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <i className=\"title-icon title-icon-lg\"></i>\r\n                <div className=\"input-line\">\r\n                    <label htmlFor=\"userId\">账号：</label>\r\n                    <input id=\"userId\" type=\"\" placeholder=\"用户名/邮箱\"></input>\r\n                </div>\r\n                <div className=\"input-line\">\r\n                    <label htmlFor=\"password\">密码：</label>\r\n                    <input id=\"password\" type=\"password\" placeholder=\"密码\"></input>\r\n                </div>\r\n                <button className=\"button-1 button-md\" onClick={this.submit}>确认</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React, { Component } from 'react';\r\nimport './classRoom.scss';\r\n\r\nclass ClassRoom extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isMax: false,\r\n            type: 0,\r\n            beginStudy: false,\r\n            timeCount: 30,\r\n            courseList: [\r\n                \"static/images/courses/0.jpg\",\r\n                \"static/images/courses/1.jpg\",\r\n                \"static/images/courses/2.jpg\",\r\n                \"static/images/courses/3.jpg\",\r\n                \"static/images/courses/4.jpg\",\r\n            ],\r\n            course: \"static/images/courses/0.jpg\",\r\n            isTick: true\r\n        }\r\n    }\r\n\r\n    toStudy = () => {\r\n        this.setState({ type: 1 });\r\n    }\r\n\r\n    back = () => {\r\n        if (this.state.type === 0) {\r\n            this.props.history.goBack();\r\n        } else {\r\n            this.setState({ type: 0 });\r\n        }\r\n    }\r\n\r\n    switchCourse = e => {\r\n        if (e.target.id) {\r\n            const { courseList } = this.state;\r\n            this.setState({ course: courseList[e.target.id], isTick: false});\r\n        }\r\n    }\r\n\r\n    continueTimer = () => {\r\n        this.setState({ course: this.state.courseList[0], isTick: true });\r\n        if (this.state.timeCount > 0) {\r\n            const timer = setInterval(() => {\r\n                const { timeCount } = this.state;\r\n                this.setState({ timeCount: timeCount - 1 });\r\n                if (timeCount <= 0 || !this.state.isTick) {\r\n                    clearInterval(timer);\r\n                }\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onHideMax = () => {\r\n        this.setState({ isMax: false });\r\n    }\r\n\r\n    onShowMax = () => {\r\n        this.setState({ isMax: true });\r\n    }\r\n\r\n    onclassOver = () => {\r\n        if (this.state.timeCount < 0) {\r\n            this.props.history.push({ pathname: '/success', state: { score: 5 } });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const timer = setInterval(() => {\r\n            const { timeCount } = this.state;\r\n            this.setState({ timeCount: timeCount - 1 });\r\n            if (timeCount === 0 || !this.state.isTick) {\r\n                clearInterval(timer);\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    render() {\r\n        const courseList = this.state.courseList.slice(1);\r\n        return (\r\n            <div className=\"ClassRoom\">\r\n                <nav className=\"nav-bar\">\r\n                    <i className=\"back-icon\" onClick={this.back}></i>\r\n                    <div>\r\n                        <i className=\"title-icon title-icon-sm\"></i>\r\n                        <i className=\"title-s-icon\" style={{ marginBottom: '-20px' }}></i>\r\n                    </div>\r\n                </nav>\r\n\r\n                <Choose>\r\n                <When condition={this.state.type === 0}>\r\n                    <div className=\"text-wrap-1\">\r\n                        <ul className=\"text-list\">\r\n                            <li>点击“上课”进行相关产品知识学习</li>\r\n                            <li>完毕学习完毕点击“下课”获得学习积分</li>\r\n                            <li>亦可点击以往内容进行再学习哦！</li>\r\n                        </ul>\r\n                    </div>\r\n                    <button className=\"button-2 button-md\" onClick={this.toStudy}>上课</button>\r\n                </When>\r\n                <When condition={this.state.type === 1}>\r\n                    <div className=\"course\">\r\n                        <img src={this.state.course} alt=\"course\" className=\"course-content\"/>\r\n                        <div className=\"course-content-mask\" onClick={this.onShowMax}></div>\r\n                    </div>\r\n                    <ul className=\"course-history\" onClick={this.switchCourse}>\r\n                        <For each=\"item\" index=\"index\" of={courseList}>\r\n                            <li key={index}>\r\n                                <img src={item} alt=\"course\"/>\r\n                                <div id={index + 1} className=\"course-mask\"></div>\r\n                            </li>\r\n                        </For>\r\n                    </ul>\r\n                    <Choose>\r\n                    <When condition={this.state.isTick}>\r\n                        <button onClick={this.onclassOver} \r\n                            className={ this.state.timeCount < 0 ? \"button-2 button-md\" : \"button-3 button-md\"}>\r\n                            下课\r\n                            <If condition={this.state.timeCount >= 0}>\r\n                                <span className=\"time-count\">{this.state.timeCount}</span>\r\n                            </If>\r\n                        </button>\r\n                    </When>\r\n                    <Otherwise>\r\n                        <button className=\"button-2 button-md\" onClick={this.continueTimer}>\r\n                            返回\r\n                            <If condition={this.state.timeCount >= 0}>\r\n                                <span className=\"time-count\">{this.state.timeCount}</span>\r\n                            </If>\r\n                        </button>\r\n                    </Otherwise>\r\n                    </Choose>\r\n                    <If condition={this.state.isMax}>\r\n                        <div className=\"max-wrap\">\r\n                            <img src={this.state.course} style={{ width: window.innerHeight + 'px', height: window.innerWidth + 'px' }} \r\n                                alt=\"course\" className=\"max\" onClick={this.onHideMax}/>\r\n                        </div>\r\n                    </If>\r\n                </When>\r\n                </Choose>\r\n\r\n                <div className=\"footer-bar\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ClassRoom;\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React, { Component } from 'react';\r\nimport './pharmacy.scss';\r\n\r\nclass Pharmacy extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bgTypes: [\r\n                'bg-1',\r\n                'bg-2',\r\n                'bg-3',\r\n                'bg-4',\r\n            ],\r\n            bgTypes2: [\r\n                'bg-m-1',\r\n                'bg-m-2',\r\n                'bg-m-3',\r\n            ],\r\n            pharmacer: [\r\n                'p-1',\r\n                'p-2',\r\n                'p-3',\r\n                'p-4',\r\n            ],\r\n            pharmacerM: [\r\n                'p-1m',\r\n                'p-2m',\r\n                'p-3m',\r\n                'p-4m',\r\n            ],\r\n            doctor: [\r\n                'doctor-1',\r\n                'doctor-2',\r\n                'doctor-3',\r\n                'doctor-4',\r\n            ],\r\n            userType: 0,\r\n            pharmacyType: 0,\r\n            pageType: 0,\r\n            checked: {},\r\n        }\r\n    }\r\n\r\n    back = () => {\r\n        switch(this.state.pageType) {\r\n            case 0:\r\n                this.props.history.goBack();\r\n                break;\r\n            case 1:\r\n                this.setState({ pageType: 0 });\r\n                break;\r\n            case 2:\r\n                this.setState({ pageType: 1 });\r\n                break;\r\n            case 3:\r\n                this.props.history.goBack();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onInquiry = () => {\r\n        this.setState({ pageType: 1 });\r\n    }\r\n\r\n    onCheck = () => {\r\n        this.setState({ pageType: 2 })\r\n    }\r\n\r\n    onChecked = (e) => {\r\n        const { checked } = this.state;\r\n        const id = e.target.id;\r\n        if (checked[id]) {\r\n            checked[id] = false;\r\n        } else {\r\n            checked[id] = true;\r\n        }\r\n\r\n        this.setState({ checked });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        if (this.state.checked.A) {\r\n            this.props.history.push({ pathname: '/success', state: { score: 15 } });\r\n        } else {\r\n            this.setState({ pageType: 3 })\r\n        }\r\n    }\r\n\r\n    onFinish = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    render() {\r\n        const { userType, pageType, checked } = this.state;\r\n        const bg = pageType === 0 || pageType === 2 ? this.state.bgTypes[userType] : this.state.bgTypes2[userType];\r\n        const buttonA = checked.A ? 'button-4' : 'button-1';\r\n        const buttonB = checked.B ? 'button-4' : 'button-1';\r\n        const buttonC = checked.C ? 'button-4' : 'button-1';\r\n        const buttonD = checked.D ? 'button-4' : 'button-1';\r\n\r\n        return (\r\n            <div className={\"Pharmacy \" + bg}>\r\n                <nav className=\"nav-bar\">\r\n                    <i className=\"back-icon\" onClick={this.back}></i>\r\n                    <div>\r\n                        <i className=\"title-icon title-icon-sm\"></i>\r\n                        <i className=\"title-s-icon\" style={{ marginBottom: '-20px' }}></i>\r\n                    </div>\r\n                </nav>\r\n\r\n                <Choose>\r\n                    <When condition={this.state.pageType === 0}>\r\n                        <i className={this.state.pharmacer[this.state.pharmacyType]}></i>\r\n                        <button className=\"button-md button-2\" onClick={this.onInquiry}>问诊</button>\r\n                    </When>\r\n                    <When condition={this.state.pageType === 1}>\r\n                        <div className=\"text-wrap-2\">\r\n                            <p>高血压长期控制不佳，能够导致哪些疾病（）</p>\r\n                            <ul className=\"choose-list\">\r\n                                <li>A. 卒中</li>\r\n                                <li>B 充血性心力衰竭</li>\r\n                                <li>C 心脏病</li>\r\n                                <li>D 猝死</li>\r\n                            </ul>\r\n                            <i className={this.state.pharmacerM[this.state.pharmacyType]}></i>\r\n                        </div>\r\n                        <button className=\"button-md button-2\" onClick={this.onCheck}>处方</button>\r\n                    </When>\r\n                    <When condition={this.state.pageType === 2}>\r\n\r\n                        <div className=\"button-box\" onClick={this.onChecked}>\r\n                            <div className=\"button-line\">\r\n                                <button id=\"A\" className={\"button-md radio \" + buttonA}>A</button>\r\n                                <button id=\"B\" className={\"button-md radio \" + buttonB}>B</button>\r\n                            </div>\r\n                            <div className=\"button-line\">\r\n                                <button id=\"C\" className={\"button-md radio \" + buttonC}>C</button>\r\n                                <button id=\"D\" className={\"button-md radio \" + buttonD}>D</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <i className={\"doctor-lg \" + this.state.doctor[userType]}></i>\r\n                        \r\n                        <button className=\"button-sm button-2\" onClick={this.onSubmit}>处方确认</button>\r\n                    </When>\r\n                    <When condition={this.state.pageType === 3}>\r\n                    <div className=\"text-wrap-2\">\r\n                        <p>高血压长期控制不佳，能够导致哪些疾病（）</p>\r\n                        <ul className=\"choose-list\">\r\n                            <li><i className=\"true\">√</i>A. 卒中</li>\r\n                            <li><i className=\"false\">×</i>B 充血性心力衰竭</li>\r\n                            <li><i className=\"false\">×</i>C 心脏病</li>\r\n                            <li><i className=\"false\">×</i>D 猝死</li>\r\n                        </ul>\r\n                        <i className={\"doctor-sm \" + this.state.doctor[userType]}></i>\r\n                    </div>\r\n                    <button className=\"button-md button-2\" onClick={this.onFinish}>确定</button>\r\n                    </When>\r\n                </Choose>\r\n                \r\n                <div className=\"footer-bar\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Pharmacy;\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React, { Component } from 'react';\r\nimport './ranking.scss';\r\n\r\nclass Ranking extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            background: [\r\n                'bg-m-1',\r\n                'bg-m-2',\r\n                'bg-m-3',\r\n            ],\r\n            doctorType1: [\r\n                'doctor-1',\r\n                'doctor-2',\r\n                'doctor-3',\r\n            ],\r\n            doctorType2: [\r\n                'doctor-1l',\r\n                'doctor-2l',\r\n                'doctor-3l',\r\n            ],\r\n            levelType: [\r\n                'level-1',\r\n                'level-2',\r\n                'level-3',\r\n            ],\r\n            rankingType: 0,\r\n            isIntro: false,\r\n            isMyLevel: false,\r\n        };\r\n    }\r\n\r\n    back = () => {\r\n        if (this.state.isIntro) {\r\n            this.setState({ isIntro: false });\r\n        } else if (this.state.isMyLevel) {\r\n            this.setState({ isMyLevel: false });\r\n        } else {\r\n            this.props.history.goBack();\r\n        }\r\n    }\r\n\r\n    onIntro = () => {\r\n        this.setState({ isIntro: true });\r\n    }\r\n\r\n    onMyLevel = () => {\r\n        this.setState({ isMyLevel: true });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"Ranking \" + this.state.background[this.state.rankingType]}>\r\n                <nav className=\"nav-bar\">\r\n                    <i className=\"back-icon\" onClick={this.back}></i>\r\n                    <div>\r\n                        <i className=\"title-icon title-icon-sm\"></i>\r\n                        <i className=\"title-s-icon\" style={{ marginBottom: '-20px' }}></i>\r\n                    </div>\r\n                </nav>\r\n                \r\n                <Choose>\r\n                <When condition={!this.state.isMyLevel}>\r\n                <div className=\"text-wrap-2\">\r\n                    <Choose>\r\n                    <When condition={!this.state.isIntro}>\r\n                        <ul className=\"text-list-2\">\r\n                            <li>第一名：<span>你好啊</span> {'御医'}(450分)</li>\r\n                            <li>第二名：XXX (450分)</li>\r\n                            <li>第三名：XXX (450分)</li>\r\n                            <li>第四名：XXX (450分)</li>\r\n                            <li>第五名：XXXXX (450分)</li>\r\n                            <li>第六名：XXX (450分)</li>\r\n                            <li>第七名：XXX (450分)</li>\r\n                            <li>第八名：XXX (450分)</li>\r\n                            <li>第九名：XXX (450分)</li>\r\n                            <li>第十名：XXX (450分)</li>\r\n                        </ul>\r\n                    </When>\r\n                    <Otherwise>\r\n                        <h2 style={{ color: '#bb080a', textAlign: 'center' }}>积分说明</h2>\r\n                        <div className=\"text-info\">\r\n                            每日处方积分奖励：\r\n                            <ul>\r\n                                <li>每日正确处方可获得5积分</li>\r\n                                <li>不正确不得积分</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"text-info\">\r\n                            连续性处方额外积分奖励：\r\n                            <ul>\r\n                                <li>连续处方一个月可额外获得50积分</li>\r\n                                <li>连续处方一个产品可额外获得100积分</li>\r\n                            </ul>\r\n                        </div>\r\n                    </Otherwise>\r\n                    </Choose>\r\n                    <i className={\"doctor-sm \" + this.state.doctorType1[this.state.rankingType]}></i>\r\n                </div>\r\n\r\n                <If condition={!this.state.isIntro && !this.state.isMyLevel}>\r\n                <div className=\"button-bar\">\r\n                    <button className=\"button-2 button-sm\" onClick={this.onIntro}>积分说明</button>\r\n                    <button className=\"button-2 button-sm\" onClick={this.onMyLevel}>我的积分</button>\r\n                </div>\r\n                </If>\r\n                </When>\r\n\r\n                <Otherwise>\r\n                    <div className={\"level-wrap \" + this.state.levelType[this.state.rankingType]}>\r\n                        <h2>\r\n                            我的积分：123\r\n                        </h2>\r\n                        <h2>\r\n                            我的排行：123\r\n                        </h2>\r\n                    </div>\r\n                    <i className={\"doctor-lg \" + this.state.doctorType2[this.state.rankingType]}></i>\r\n                </Otherwise>\r\n                </Choose>\r\n\r\n                <div className=\"footer-bar\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Ranking;\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React, { PureComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './success.scss';\r\nimport 'animate.css';\r\n\r\nclass Success extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            successTypes: [\r\n                'bg-1',\r\n                'bg-2',\r\n                'bg-3',\r\n            ],\r\n            doctorTypes: [\r\n                'doctor-1l',\r\n                'doctor-2l',\r\n                'doctor-3l',\r\n            ],\r\n            userType: 2\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let score = 5;\r\n        if (this.props.location.state) {\r\n            score = this.props.location.state.score || 5;\r\n        }\r\n        return  (\r\n            <div className={\"Success \" + this.state.successTypes[this.state.userType]}>\r\n                <nav className=\"nav-bar\">\r\n                    <i></i>\r\n                    <div>\r\n                        <i className=\"title-icon title-icon-sm\"></i>\r\n                        <i className=\"title-s-icon\" style={{ marginBottom: '-20px' }}></i>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"score\">\r\n                    <div className=\"animated fadeInUp\">+ {score}</div>\r\n                </div>\r\n                <i className={\"doctor-lg \" + this.state.doctorTypes[this.state.userType]}></i>\r\n                <div className=\"handel\">\r\n                    <Link to=\"/home\">\r\n                        <button className=\"button-2 button-md animated bounceInUp delay-1s\">完成</button>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"footer-bar\"></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Success;\r\n","import React, { Component, Fragment } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/home';\nimport Loading from './pages/loading';\nimport Login from './pages/login';\nimport ClassRoom from './pages/classRoom';\nimport Pharmacy from './pages/pharmacy';\nimport Ranking from './pages/ranking';\nimport Success from './pages/success';\nimport 'normalize.css';\nimport './index.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Login}></Route>\n            <Route path=\"/home\" component={Home}></Route>\n            <Route path=\"/loading\" component={Loading}></Route>\n            <Route path=\"/classroom\" component={ClassRoom}></Route>\n            <Route path=\"/pharmacy\" component={Pharmacy}></Route>\n            <Route path=\"/ranking\" component={Ranking}></Route>\n            <Route path=\"/success\" component={Success}></Route>\n          </Switch>\n        </HashRouter>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}