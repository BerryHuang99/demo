{"version":3,"sources":["pages/home.jsx","components/progress.jsx","pages/loading.jsx","pages/login.jsx","pages/classRoom.jsx","pages/pharmacy.jsx","pages/ranking.jsx","pages/success.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","Link","to","Component","Progress","percent","this","props","progress","style","width","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","loading","setInterval","setState","clearInterval","window","location","hash","components_progress","submit","__PAGE_DATA__","IMAGES","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","Image","src","err","return","htmlFor","id","type","placeholder","onClick","ClassRoom","toStudy","beginTimer","back","history","goBack","switchCourse","e","target","courseList","course","isTick","timeCount","timer","_this$state","onHideMax","isMax","onShowMax","onclassOver","push","pathname","score","CLASS_SCORE","beginStudy","slice","marginBottom","key","alt","map","index","innerHeight","height","innerWidth","Pharmacy","pageType","onInquiry","onCheck","onChecked","checked","onSubmit","answers","A","B","C","D","res","i","ANSWER_SCORE","onFinish","bgTypes","bgTypes2","pharmacer","pharmacerM","doctor","userType","DOCTOR_TYPE","pharmacyType","PROBLEM_TYPE","bg","buttonA","buttonB","buttonC","buttonD","Ranking","isIntro","isMyLevel","onIntro","onMyLevel","background","doctorType1","doctorType2","levelType","rankingType","color","textAlign","Success","successTypes","doctorTypes","PureComponent","App","react","HashRouter","Switch","Route","exact","path","component","Loading","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f37b61cd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './home.scss';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home\">\r\n                <i className=\"title-icon title-icon-lg\"></i>\r\n                <Link to=\"classroom\">\r\n                    <button className=\"button-1 button-lg\">药方学堂</button>\r\n                </Link>\r\n                <Link to=\"pharmacy\">\r\n                    <button className=\"button-1 button-lg\">悬壶济世</button>\r\n                </Link>\r\n                <Link to=\"ranking\">\r\n                    <button className=\"button-1 button-lg\">等级排行</button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './progress.scss';\r\n\r\nclass Progress extends Component {\r\n\r\n    static propTypes = {\r\n        progress: PropTypes.number\r\n    }\r\n\r\n    render() {\r\n        const percent = this.props.progress + '%';\r\n        return (\r\n            <div className=\"Progress\">\r\n                <div className=\"Progress-content\" style={{ width: percent }}></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Progress;\r\n","import React, { Component } from 'react';\r\nimport Progress from '../components/progress';\r\nimport 'animate.css';\r\nimport './loading.scss';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            progress: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const loading = setInterval(() => {\r\n            const progress = this.state.progress + 20;\r\n            this.setState({ progress });\r\n            if (progress === 120) {\r\n                clearInterval(loading);\r\n                window.location.hash = \"home\";\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Loading\">\r\n                <i className=\"title-icon title-icon-lg\"></i>\r\n                <span className=\"Loading-title animated infinite jello\">\r\n                    Loding...\r\n                </span>\r\n                <Progress progress={this.state.progress}></Progress>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport './login.scss';\r\n\r\nclass Login extends Component {\r\n\r\n    submit = () => {\r\n        window.location.hash = \"loading\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.__PAGE_DATA__.IMAGES) {\r\n            for(let item of window.__PAGE_DATA__.IMAGES) {\r\n                const image = new Image();\r\n                image.src = item;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <i className=\"title-icon title-icon-lg\"></i>\r\n                <div className=\"input-line\">\r\n                    <label htmlFor=\"userId\">账号：</label>\r\n                    <input id=\"userId\" type=\"\" placeholder=\"用户名/邮箱\"></input>\r\n                </div>\r\n                <div className=\"input-line\">\r\n                    <label htmlFor=\"password\">密码：</label>\r\n                    <input id=\"password\" type=\"password\" placeholder=\"密码\"></input>\r\n                </div>\r\n                <button className=\"button-1 button-md\" onClick={this.submit}>确认</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React, { Component } from 'react';\r\nimport './classRoom.scss';\r\n\r\nclass ClassRoom extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isMax: false,\r\n            type: 0,\r\n            beginStudy: false,\r\n            timeCount: 30,\r\n            courseList: [\r\n                \"static/images/courses/0.jpg\",\r\n                \"static/images/courses/1.jpg\",\r\n                \"static/images/courses/2.jpg\",\r\n                \"static/images/courses/3.jpg\",\r\n                \"static/images/courses/4.jpg\",\r\n            ],\r\n            course: \"static/images/courses/0.jpg\",\r\n            isTick: false,\r\n        }\r\n    }\r\n\r\n    toStudy = () => {\r\n        this.setState({ type: 1 });\r\n        this.beginTimer();\r\n    }\r\n\r\n    back = () => {\r\n        if (this.state.type === 0) {\r\n            this.props.history.goBack();\r\n        } else {\r\n            this.setState({ type: 0 });\r\n        }\r\n    }\r\n\r\n    switchCourse = e => {\r\n        if (e.target.id) {\r\n            const { courseList } = this.state;\r\n            this.setState({ course: courseList[e.target.id], isTick: false});\r\n        }\r\n    }\r\n\r\n    beginTimer = () => {\r\n        this.setState({ course: this.state.courseList[0], isTick: true });\r\n        if (this.state.timeCount > 0) {\r\n            const timer = setInterval(() => {\r\n                const { timeCount, type } = this.state;\r\n                if (timeCount < 0 || !this.state.isTick || type === 0) {\r\n                    clearInterval(timer);\r\n                } else {\r\n                    this.setState({ timeCount: timeCount - 1 });\r\n                }\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onHideMax = () => {\r\n        this.setState({ isMax: false });\r\n    }\r\n\r\n    onShowMax = () => {\r\n        this.setState({ isMax: true });\r\n    }\r\n\r\n    onclassOver = () => {\r\n        if (this.state.timeCount < 0) {\r\n            this.props.history.push({ pathname: '/success', state: { score: window.__PAGE_DATA__.CLASS_SCORE || 5 } });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const courseList = this.state.courseList.slice(1);\r\n        return (\r\n            <div className=\"ClassRoom\">\r\n                <nav className=\"nav-bar\">\r\n                    <i className=\"back-icon\" onClick={this.back}></i>\r\n                    <div>\r\n                        <i className=\"title-icon title-icon-sm\"></i>\r\n                        <i className=\"title-s-icon\" style={{ marginBottom: '-20px' }}></i>\r\n                    </div>\r\n                </nav>\r\n\r\n                <Choose>\r\n                <When condition={this.state.type === 0}>\r\n                    <div className=\"text-wrap-1\">\r\n                        <ul className=\"text-list\">\r\n                            <li>点击“上课”进行相关产品知识学习</li>\r\n                            <li>完毕学习完毕点击“下课”获得学习积分</li>\r\n                            <li>亦可点击以往内容进行再学习哦！</li>\r\n                        </ul>\r\n                    </div>\r\n                    <button className=\"button-2 button-md\" onClick={this.toStudy}>上课</button>\r\n                </When>\r\n                <When condition={this.state.type === 1}>\r\n                    <div className=\"course\">\r\n                        <img src={this.state.course} alt=\"course\" className=\"course-content\"/>\r\n                        <div className=\"course-content-mask\" onClick={this.onShowMax}></div>\r\n                    </div>\r\n                    <ul className=\"course-history\" onClick={this.switchCourse}>\r\n                        <For each=\"item\" index=\"index\" of={courseList}>\r\n                            <li key={index}>\r\n                                <img src={item} alt=\"course\"/>\r\n                                <div id={index + 1} className=\"course-mask\"></div>\r\n                            </li>\r\n                        </For>\r\n                    </ul>\r\n                    <Choose>\r\n                    <When condition={this.state.isTick}>\r\n                        <button onClick={this.onclassOver} \r\n                            className={ this.state.timeCount < 0 ? \"button-2 button-md\" : \"button-3 button-md\"}>\r\n                            下课\r\n                            <If condition={this.state.timeCount >= 0}>\r\n                                <span className=\"time-count\">{this.state.timeCount}</span>\r\n                            </If>\r\n                        </button>\r\n                    </When>\r\n                    <Otherwise>\r\n                        <button className=\"button-2 button-md\" onClick={this.beginTimer}>\r\n                            返回\r\n                            <If condition={this.state.timeCount >= 0}>\r\n                                <span className=\"time-count\">{this.state.timeCount}</span>\r\n                            </If>\r\n                        </button>\r\n                    </Otherwise>\r\n                    </Choose>\r\n                    <If condition={this.state.isMax}>\r\n                        <div className=\"max-wrap\">\r\n                            <img src={this.state.course} style={{ width: window.innerHeight + 'px', height: window.innerWidth + 'px' }} \r\n                                alt=\"course\" className=\"max\" onClick={this.onHideMax}/>\r\n                        </div>\r\n                    </If>\r\n                </When>\r\n                </Choose>\r\n\r\n                <div className=\"footer-bar\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ClassRoom;\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React, { Component } from 'react';\r\nimport './pharmacy.scss';\r\n\r\nclass Pharmacy extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bgTypes: [\r\n                'bg-1',\r\n                'bg-2',\r\n                'bg-3',\r\n                'bg-4',\r\n            ],\r\n            bgTypes2: [\r\n                'bg-m-1',\r\n                'bg-m-2',\r\n                'bg-m-3',\r\n            ],\r\n            pharmacer: [\r\n                'p-1',\r\n                'p-2',\r\n                'p-3',\r\n                'p-4',\r\n            ],\r\n            pharmacerM: [\r\n                'p-1m',\r\n                'p-2m',\r\n                'p-3m',\r\n                'p-4m',\r\n            ],\r\n            doctor: [\r\n                'doctor-1',\r\n                'doctor-2',\r\n                'doctor-3',\r\n                'doctor-4',\r\n            ],\r\n            userType: window.__PAGE_DATA__.DOCTOR_TYPE || 0,\r\n            pharmacyType: window.__PAGE_DATA__.PROBLEM_TYPE || 0,\r\n            pageType: 0,\r\n            checked: {},\r\n            answers: [\r\n                true,\r\n                false,\r\n                false,\r\n                false,\r\n            ]\r\n        }\r\n    }\r\n\r\n    back = () => {\r\n        switch(this.state.pageType) {\r\n            case 0:\r\n                this.props.history.goBack();\r\n                break;\r\n            case 1:\r\n                this.setState({ pageType: 0 });\r\n                break;\r\n            case 2:\r\n                this.setState({ pageType: 1 });\r\n                break;\r\n            case 3:\r\n                this.props.history.goBack();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onInquiry = () => {\r\n        this.setState({ pageType: 1 });\r\n    }\r\n\r\n    onCheck = () => {\r\n        this.setState({ pageType: 2 })\r\n    }\r\n\r\n    onChecked = (e) => {\r\n        const { checked } = this.state;\r\n        const id = e.target.id;\r\n        if (checked[id]) {\r\n            checked[id] = false;\r\n        } else {\r\n            checked[id] = true;\r\n        }\r\n\r\n        this.setState({ checked });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { answers } = this.state;\r\n        const checked = [this.state.checked.A, \r\n            this.state.checked.B, \r\n            this.state.checked.C, \r\n            this.state.checked.D];\r\n        let res = true;\r\n        for (let i = 0; i < 4; i++) {\r\n            if (!answers[i] !== !checked[i]) {\r\n                res = false;\r\n                break;\r\n            }\r\n        }\r\n        if (res) {\r\n            this.props.history.push({ pathname: '/success', state: { score: window.__PAGE_DATA__.ANSWER_SCORE || 15 } });\r\n        } else {\r\n            this.setState({ pageType: 3 })\r\n        }\r\n    }\r\n\r\n    onFinish = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    render() {\r\n        const { userType, pageType, checked } = this.state;\r\n        const bg = pageType === 0 || pageType === 2 ? this.state.bgTypes[userType] : this.state.bgTypes2[userType];\r\n        const buttonA = checked.A ? 'button-4' : 'button-1';\r\n        const buttonB = checked.B ? 'button-4' : 'button-1';\r\n        const buttonC = checked.C ? 'button-4' : 'button-1';\r\n        const buttonD = checked.D ? 'button-4' : 'button-1';\r\n\r\n        return (\r\n            <div className={\"Pharmacy \" + bg}>\r\n                <nav className=\"nav-bar\">\r\n                    <i className=\"back-icon\" onClick={this.back}></i>\r\n                    <div>\r\n                        <i className=\"title-icon title-icon-sm\"></i>\r\n                        <i className=\"title-s-icon\" style={{ marginBottom: '-20px' }}></i>\r\n                    </div>\r\n                </nav>\r\n\r\n                <Choose>\r\n                    <When condition={this.state.pageType === 0}>\r\n                        <i className={this.state.pharmacer[this.state.pharmacyType]}></i>\r\n                        <button className=\"button-md button-2\" onClick={this.onInquiry}>问诊</button>\r\n                    </When>\r\n                    <When condition={this.state.pageType === 1}>\r\n                        <div className=\"text-wrap-2\">\r\n                            <p>高血压长期控制不佳，能够导致哪些疾病（）</p>\r\n                            <ul className=\"choose-list\">\r\n                                <li>A. 卒中</li>\r\n                                <li>B. 充血性心力衰竭</li>\r\n                                <li>C. 心脏病</li>\r\n                                <li>D. 猝死</li>\r\n                            </ul>\r\n                            <i className={this.state.pharmacerM[this.state.pharmacyType]}></i>\r\n                        </div>\r\n                        <button className=\"button-md button-2\" onClick={this.onCheck}>处方</button>\r\n                    </When>\r\n                    <When condition={this.state.pageType === 2}>\r\n\r\n                        <div className=\"button-box\" onClick={this.onChecked}>\r\n                            <div className=\"button-line\">\r\n                                <button id=\"A\" className={\"button-md radio \" + buttonA}>A</button>\r\n                                <button id=\"B\" className={\"button-md radio \" + buttonB}>B</button>\r\n                            </div>\r\n                            <div className=\"button-line\">\r\n                                <button id=\"C\" className={\"button-md radio \" + buttonC}>C</button>\r\n                                <button id=\"D\" className={\"button-md radio \" + buttonD}>D</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <i className={\"doctor-lg \" + this.state.doctor[userType]}></i>\r\n                        \r\n                        <button className=\"button-sm button-2\" onClick={this.onSubmit}>处方确认</button>\r\n                    </When>\r\n                    <When condition={this.state.pageType === 3}>\r\n                    <div className=\"text-wrap-2\">\r\n                        <p>高血压长期控制不佳，能够导致哪些疾病（）</p>\r\n                        <ul className=\"choose-list\">\r\n                            <li><i className=\"true\"></i>A. 卒中</li>\r\n                            <li><i className=\"false\"></i>B. 充血性心力衰竭</li>\r\n                            <li><i className=\"false\"></i>C. 心脏病</li>\r\n                            <li><i className=\"false\"></i>D. 猝死</li>\r\n                        </ul>\r\n                        <i className={\"doctor-sm \" + this.state.doctor[userType]}></i>\r\n                    </div>\r\n                    <button className=\"button-md button-2\" onClick={this.onFinish}>确定</button>\r\n                    </When>\r\n                </Choose>\r\n                \r\n                <div className=\"footer-bar\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Pharmacy;\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React, { Component } from 'react';\r\nimport './ranking.scss';\r\n\r\nclass Ranking extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            background: [\r\n                'bg-m-1',\r\n                'bg-m-2',\r\n                'bg-m-3',\r\n            ],\r\n            doctorType1: [\r\n                'doctor-1',\r\n                'doctor-2',\r\n                'doctor-3',\r\n            ],\r\n            doctorType2: [\r\n                'doctor-1l',\r\n                'doctor-2l',\r\n                'doctor-3l',\r\n            ],\r\n            levelType: [\r\n                'level-1',\r\n                'level-2',\r\n                'level-3',\r\n            ],\r\n            rankingType: window.__PAGE_DATA__.DOCTOR_TYPE || 0,\r\n            isIntro: false,\r\n            isMyLevel: false,\r\n        };\r\n    }\r\n\r\n    back = () => {\r\n        if (this.state.isIntro) {\r\n            this.setState({ isIntro: false });\r\n        } else if (this.state.isMyLevel) {\r\n            this.setState({ isMyLevel: false });\r\n        } else {\r\n            this.props.history.goBack();\r\n        }\r\n    }\r\n\r\n    onIntro = () => {\r\n        this.setState({ isIntro: true });\r\n    }\r\n\r\n    onMyLevel = () => {\r\n        this.setState({ isMyLevel: true });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"Ranking \" + this.state.background[this.state.rankingType]}>\r\n                <nav className=\"nav-bar\">\r\n                    <i className=\"back-icon\" onClick={this.back}></i>\r\n                    <div>\r\n                        <i className=\"title-icon title-icon-sm\"></i>\r\n                        <i className=\"title-s-icon\" style={{ marginBottom: '-20px' }}></i>\r\n                    </div>\r\n                </nav>\r\n                \r\n                <Choose>\r\n                <When condition={!this.state.isMyLevel}>\r\n                <div className=\"text-wrap-2\">\r\n                    <Choose>\r\n                    <When condition={!this.state.isIntro}>\r\n                        <ul className=\"text-list-2\">\r\n                            <li>第一名：<span>你好啊</span> {'御医'}(450分)</li>\r\n                            <li>第二名：XXX (450分)</li>\r\n                            <li>第三名：XXX (450分)</li>\r\n                            <li>第四名：XXX (450分)</li>\r\n                            <li>第五名：XXXXX (450分)</li>\r\n                            <li>第六名：XXX (450分)</li>\r\n                            <li>第七名：XXX (450分)</li>\r\n                            <li>第八名：XXX (450分)</li>\r\n                            <li>第九名：XXX (450分)</li>\r\n                            <li>第十名：XXX (450分)</li>\r\n                        </ul>\r\n                    </When>\r\n                    <Otherwise>\r\n                        <h2 style={{ color: '#bb080a', textAlign: 'center' }}>积分说明</h2>\r\n                        <div className=\"text-info\">\r\n                            每日处方积分奖励：\r\n                            <ul>\r\n                                <li>每日正确处方可获得5积分</li>\r\n                                <li>不正确不得积分</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"text-info\">\r\n                            连续性处方额外积分奖励：\r\n                            <ul>\r\n                                <li>连续处方一个月可额外获得50积分</li>\r\n                                <li>连续处方一个产品可额外获得100积分</li>\r\n                            </ul>\r\n                        </div>\r\n                    </Otherwise>\r\n                    </Choose>\r\n                    <i className={\"doctor-sm \" + this.state.doctorType1[this.state.rankingType]}></i>\r\n                </div>\r\n\r\n                <If condition={!this.state.isIntro && !this.state.isMyLevel}>\r\n                <div className=\"button-bar\">\r\n                    <button className=\"button-2 button-sm\" onClick={this.onIntro}>积分说明</button>\r\n                    <button className=\"button-2 button-sm\" onClick={this.onMyLevel}>我的积分</button>\r\n                </div>\r\n                </If>\r\n                </When>\r\n\r\n                <Otherwise>\r\n                    <div className={\"level-wrap \" + this.state.levelType[this.state.rankingType]}>\r\n                        <h2>\r\n                            我的积分：123\r\n                        </h2>\r\n                        <h2>\r\n                            我的排行：123\r\n                        </h2>\r\n                    </div>\r\n                    <i className={\"doctor-lg \" + this.state.doctorType2[this.state.rankingType]}></i>\r\n                </Otherwise>\r\n                </Choose>\r\n\r\n                <div className=\"footer-bar\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Ranking;\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React, { PureComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './success.scss';\r\nimport 'animate.css';\r\n\r\nclass Success extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            successTypes: [\r\n                'bg-1',\r\n                'bg-2',\r\n                'bg-3',\r\n            ],\r\n            doctorTypes: [\r\n                'doctor-1l',\r\n                'doctor-2l',\r\n                'doctor-3l',\r\n            ],\r\n            userType: window.__PAGE_DATA__.DOCTOR_TYPE || 0,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let score = 5;\r\n        if (this.props.location.state) {\r\n            score = this.props.location.state.score || 5;\r\n        }\r\n        return  (\r\n            <div className={\"Success \" + this.state.successTypes[this.state.userType]}>\r\n                <nav className=\"nav-bar\">\r\n                    <i></i>\r\n                    <div>\r\n                        <i className=\"title-icon title-icon-sm\"></i>\r\n                        <i className=\"title-s-icon\" style={{ marginBottom: '-20px' }}></i>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"score\">\r\n                    <div className=\"animated fadeInUp\">+ {score}</div>\r\n                </div>\r\n                <i className={\"doctor-lg \" + this.state.doctorTypes[this.state.userType]}></i>\r\n                <div className=\"handel\">\r\n                    <Link to=\"/home\">\r\n                        <button className=\"button-2 button-md animated bounceInUp delay-1s\">完成</button>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"footer-bar\"></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Success;\r\n","import React, { Component, Fragment } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/home';\nimport Loading from './pages/loading';\nimport Login from './pages/login';\nimport ClassRoom from './pages/classRoom';\nimport Pharmacy from './pages/pharmacy';\nimport Ranking from './pages/ranking';\nimport Success from './pages/success';\nimport 'normalize.css';\nimport './index.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Login}></Route>\n            <Route path=\"/home\" component={Home}></Route>\n            <Route path=\"/loading\" component={Loading}></Route>\n            <Route path=\"/classroom\" component={ClassRoom}></Route>\n            <Route path=\"/pharmacy\" component={Pharmacy}></Route>\n            <Route path=\"/ranking\" component={Ranking}></Route>\n            <Route path=\"/success\" component={Success}></Route>\n          </Switch>\n        </HashRouter>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}